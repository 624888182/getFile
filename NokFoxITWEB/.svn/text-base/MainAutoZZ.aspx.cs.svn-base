using System.Globalization;
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using Economy.BLL;
using Economy.Publibrary;
//using SCM.GSCMDKen;
// using Prilibrary.FsplitNew;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Forms;
using System.Threading;
using EconomyUser;
using SFC.TJWEB;


public partial class Main_MainAutoZZ : System.Web.UI.Page
{
 
    static string NetSqlDB4 = ConfigurationManager.AppSettings["SqlZZWebString"]; 
    static string OraL10DBAMain = "";      // 76  Oracle Unix
    static string OraL10DBAStandBy = "";    // 211 Oracle Unix
    static string OraL6DBAMain = "";        // 214 Oracle Unix 
    static string OraL6DBAStandBy = "";     // 
    static string OraWebCTLDBA = "";        // 221 Oracle Window
    static string SqlWebCTLDBA = "";        // 221 Sql Windoq 
    string SiteName = "ZZSFC";
    static string Username, FPassword, LoginFlag, PSFlag = "N", Acttype = "C", CallTiptoptype = "I";
    public static string PPSite = "ZZSFC";

    ClassLibrarySCM1.Class1 LibSCM1Pointer = new ClassLibrarySCM1.Class1();
    ClassLibraryUSR1.Class1 LibUSR1Pointer = new ClassLibraryUSR1.Class1();
  

    UsrCtllib   UsrCtllibPointer   = new UsrCtllib();
    // FPubLib     FPubLibPointer     = new FPubLib();
    AutoUpload  AutoUploadPointer  = new AutoUpload();
    //CreateFile  CreateFilePointer  = new CreateFile();
    TJLibZhu    TJLibZhuPointer    = new TJLibZhu();
    TJSY        TJSYPointer        = new TJSY();
    GetSapBOMINVData GetSapBOMINVDataPointer = new GetSapBOMINVData();
    TGETWO2      TGETWO2Pointer = new TGETWO2();
    DeLinkPidlib DeLinkPidlibPointer = new DeLinkPidlib();
    DeLinkPidlib4 DeLinkPidlib4Pointer = new DeLinkPidlib4();
    //ChiMeilib  ChiMeilibPointer = new ChiMeilib();
    SFCLinkTiptop SFCLinkTiptopPointer = new SFCLinkTiptop();

    public string VUrl;
    //static string ParaAutoflag = "";
    static int autorunflag = 0, Aerrcnt = 0;
    static int Arunstatus = 0, ASysCount = 1;
    static int firstcnt=0;
    static int Aautoctlflag = 1; // Auto Control
    static int AautoCount = 1;   // Auto Control
    protected string oraDba = "oracle";
    //static string MotStandDB = "L8StandByConnectionString";   
    string tmpstr = "";
    //static string ITSys = "R16";
    // protected string ProgramParam = "N";
    static int ArrMax = 200;
    static string[] ReadTxtArray = new string[ArrMax];
       
    protected void Page_Load(object sender, EventArgs e)
    {
        string r1 = "", t11="";
        int    in1 = 0;

        if (!Page.IsPostBack)
        {
                string t1 = "", t2 = "", t3 = "", t4 = "", t5 = "", t6 = "", t7 = "", t8 = "", t9 = "";
                InitVar();
                TextBox1.Focus();
                TextBox4.Text = " TJ IDM Web Server http://10.186.171.197/ZZIDMWeb/MainAutoZZ.aspx ";
                Timer1.Enabled = false;                
             
                r1 = ReadParaTxt("WebReadParam.txt", "10001");
                //// Auto Only
                string Loc1 = "";
                GetTextFile(ref ReadTxtArray, ArrMax, "2");  // "1" Org, "2" Decode by Pcode "23101"                 
                Loc1 = UsrCtllibPointer.GetTextBySite(ref ReadTxtArray, ArrMax, SiteName, "1", ref OraL10DBAMain, ref OraL10DBAStandBy, ref OraL6DBAMain, ref OraL6DBAStandBy, ref OraWebCTLDBA, ref SqlWebCTLDBA, ref t1, ref t2, ref t3, ref t4, ref t5, ref t6, ref t7, ref t8);  // "1" 不傳換
                //RunORACLEDB = OraL10DBAMain; //  UsrCtllibPointer.GetTextByCode(ref ReadTxtArray, ArrMax, "23201", "1");  // TJ DB10 Server
                NetSqlDB4 = SqlWebCTLDBA;

                if ( Aautoctlflag == 1 )
                {
                     Button17.Text = "系統自動啟動 ZZ Site";
                     TextBox4.Text = "系統自動啟動 ZZ Site" + ASysCount.ToString();
                     firstcnt++;           
                     Aautoctlflag = Aautoctlflag;
                     // t11 = FPubLibPointer.PubWri_MessLog("IDMAuto", ASysCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "FirstTimeMainloop", "", "", "", NetSqlDB4, "sql");         // 10 Code
                     tmpstr = MainLoop();
                     Timer1.Enabled = true;
                }   
                
        }
              

        if (Aautoctlflag == 1)
        {
            Timer1.Enabled = true;
            AautoCount++;
        }
       

    }   // end Page_load;

  

    protected string MainLoop()
    {
        int i = 3;
        string Ret1 = "";
        Timer1.Enabled = false;
        string tmptime = DateTime.Now.ToString("yyyyMMddHHmmssmm");
        TextBox4.Text = "系統自動啟動" + "ZZAutoMainLoop : " + ASysCount.ToString() + "次, " + tmptime;
        // string t1 = FPubLibPointer.PubWri_MessLog("IDMAuto", ASysCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "MainLoop", "", "", "", NetSqlDB4, "sql");         // 10 Code
        AutoGooProc();
        // AutoTJL6Proc();  // Get Sap Data Only
        // AutoTJL6ToL8PIDProc();
        // AutoTJL6ToL8PIDProcCheck();
        // AutoTJL6ToL8PIDProcCopyIMEI();
        // Ret1 = DeLinkPidlib4Pointer.L6ToL8SFCSFIS1C_MODEL_DESC_T("1", "oracle", OraL6DBAMain, OraL10DBAMain);

        //Call Toptop
        //1.1	ZRFC_WLBG_KIT_P02_1  (  MRP02.MOCTA, MRP02.MOCTB ) 
        //1.2	T_ZQM_HEADE_STRU_1  [SAP.SPA_WORK_LIST, [
        //1.3	T_ZQM_COMPONENT_STRU_1 [SAP.SAP_WO_COMP,]
        //1.4	ZSD_SFC_GET_HU_DATA_1 [SAP.CMCS_SFC_PACKING_LINE_ALL]

        //Call Toptop
        //1.1	ZRFC_WLBG_KIT_P02_2    (  MRP02.MOCTA, MRP02.MOCTB ) 
        //1.2	T_ZQM_HEADE_STRU_2     [SAP.SPA_WORK_LIST, [
        //1.3	T_ZQM_COMPONENT_STRU_2 [SAP.SAP_WO_COMP,]
        //1.4	ZSD_SFC_GET_HU_DATA_2  [SAP.CMCS_SFC_PACKING_LINE_ALL]
        Timer1.Enabled = false;
        string Dtype = "I", SysDate = DateTime.Today.ToString("yyyyMMdd"), DBType = "oracle";
        string DBReadString  = ReadParaTxt("WebReadParam.txt", "23301");  // L10
        string DBWriString   = ReadParaTxt("WebReadParam.txt", "23301");  // L10
        string DBWriStringL6 = ReadParaTxt("WebReadParam.txt", "23303");  // L6
        string PCode = ReadParaTxt("WebReadParam.txt", "23101");
        Session["ZZPCode"] = ReadParaTxt("WebReadParam.txt", "23101");
        Session["ZZPSite"] = "tjsfc";
        //DBReadString = ConfigurationManager.AppSettings["OraZZL10DBConnectionString"]; 
        //DBWriString  = ConfigurationManager.AppSettings["OraZZL10DBConnectionString"];
        //string Retstr1 = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_P0_3("1", "oracle", DBReadString, DBWriString, "1");  
        if (CallTiptoptype != "") Dtype = CallTiptoptype;
        string Retstr = "";
        string BSite = PPSite;
        string ReqType = "", ReqData = "";

        // Test C 
        //Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_P0_2("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode);
        //Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_P02_2(BSite, Dtype, SysDate, DBType, DBReadString, DBWriStringL6, PCode);  // Move MOCTAfrom Buffer to L6 SFC  
        //return (""); 
        // end Test

        // ReqType : "1": Day 20130626, "2" DN :/EM1-D60002 "3" WO_NO WM1-D60002, L6 "4" WO_NO L10, "5"; ReqData : 20130626/WM1-D60002/EM1-D60002 
        // Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_ALL("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode, ReqType, ReqData); 
        string tmpdate = DateTime.Today.ToString("yyyyMMdd"); 
        Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_PO2A("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode, "1", tmpdate ); // L6 MOCTA Get from Tiptop
        Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_PO2B("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode, "1", tmpdate ); // L6 MOCTB Get from Tiptop
        Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_P02_2(BSite, Dtype, SysDate, DBType, DBReadString, DBWriStringL6, PCode);  // Move MOCTAfrom Buffer to L6 SFC  

        Retstr = SFCLinkTiptopPointer.T_ZQM_HEADE_STRU("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode, "1", tmpdate);  // WO_LIST Get from Tiptop
        Retstr = SFCLinkTiptopPointer.T_ZQM_COMPONENT_STRU("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode, "1", tmpdate); // WO_COMP Get from Tiptop
        Retstr = SFCLinkTiptopPointer.T_ZQM_HEADE_STRU_2(BSite, Dtype, SysDate, DBType, DBReadString, DBWriString, PCode);     // WO_LIST Move from Buffer to SFC  
        Retstr = SFCLinkTiptopPointer.T_ZQM_COMPONENT_STRU_2(BSite, Dtype, SysDate, DBType, DBReadString, DBWriString, PCode); // WO_COMP Move from Buffer to SFC

        Retstr = SFCLinkTiptopPointer.ZSD_SFC_GET_HU_DATA("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode, "1", tmpdate );  // PACK Get from Tiptop
        Retstr = SFCLinkTiptopPointer.ZRFC_WLBG_KIT_P0_2("tjsfc", Dtype, SysDate, DBType, DBReadString, DBWriString, PCode );   // PACK Move from Buffer to SFC
        
        CallTiptoptype = "";          
        // AutoChieMeiProc();  // 20130330
        Timer1.Enabled = true;
        return ("");        
     
    }
  


    private void InitVar()
    {
       FPassword="";      
       Session["SUsername"] = "web";
       Session["SReadFlag"] = "";
       Username = "";
       FPassword = "";
       PSFlag = "N";
       Acttype = "C";
       LoginFlag = "N";
       Session["SUsername"] = "web";
       Session["SReadFlag"] = "";
       string p2 = ReadParaTxt("WebReadParam.txt", "23101");
       string p1 = SiteName.ToLower();
       ClassLibraryPDBA1.Class1 LibPDBA1Pointer = new ClassLibraryPDBA1.Class1();
       string t2 = LibPDBA1Pointer.Gooinit_var(p1, p2);
       string p3 = "SAP";   // "tmp";  L 10 directory
       string p4 = "MRP02"; // L6
       string p5 = "", p6 = "", p7 = "", p8 = "", p9 = "", p10="";
       string t3 = LibPDBA1Pointer.Gooinit_var10(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
    
    }  // initvar

protected void  Button1_Click(object sender, EventArgs e)
{
   
}


protected void Button2_Click(object sender, EventArgs e)  // Modify 
{
    
}

protected void Button3_Click(object sender, EventArgs e)
{
    }

protected void TextBox2_TextChanged(object sender, EventArgs e)
{
    
}    

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Encl String Algorithm : 
// 1. Input string  default for (v1 = 0; v1 < 20; v1++) trschar[v1] = Convert.ToChar((v1*v1+47) % 255 );
//    Put Password in this array from start
// 2. encchar string default  encchar[v1] = Convert.ToChar((v1*v1+4703) % 255 );
// 3. OutPut string  rchar = trschar[v1] ^= encchar[v1]; 
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////

protected void tvManuTree_SelectedNodeChanged(object sender, EventArgs e)
{

}


//////////////////////////////////////////////////////////////////////////////////////
//  1000  for 1 second,  //  60000 for 1 minute, 1800000 for 30 minute
//  
protected void Timer1_Tick(object sender, EventArgs e)
{
    string s1 = "";
    TextBox4.Text = "Timer Interrupt";
    ASysCount++;
    //Aautoctlflag = Aautoctlflag; //Auto only
    //string t1 = FPubLibPointer.PubWri_MessLog("IDMAuto", ASysCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "TimerINT", "", "", "", NetSqlDB4, "sql");         // 10 Code
     
    // return; // not auto only

    // Aautoctlflag = Aautoctlflag;
    AautoCount++;
    if (Aautoctlflag == 1)  // boot automatic runnning
    {
        if (Arunstatus == 0) // go to running
        {
            //t1 = FPubLibPointer.PubWri_MessLog("IDMAuto", AautoCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "TimeINTGOToMainloop", "", "", "", NetSqlDB4, "sql");  // 10 Code
            s1 = MainLoop();
        }
        else
            Aerrcnt++;
    }
     
    if (Aerrcnt > 2)
    {
        Aerrcnt = 0;
        Arunstatus = 0;
    }

    return;
    // if ( ASysCount >= 1 )  // 一次 20 分, 3*20=60 次 60*20=1200/60=20 Hr 
    //      Response.Write("<SCRIPT   LANGUAGE='JavaScript'>window.opener=null;window.close();</SCRIPT> "); // close system
   
   

}

///////////////////////////////////////////////////////////////////////
protected void btnLogout_Click(object sender, EventArgs e)
{
    Response.Write("<SCRIPT   LANGUAGE='JavaScript'>window.opener=null;window.close();</SCRIPT> ");
}

protected void Button35_Click(object sender, EventArgs e)
{
    autorunflag = 0;   // Automatic running
    Arunstatus = 0;     // currstatus
  //  runstep = 0;       // run step

    Timer1.Enabled = false;
    TextBox4.Text = "Clear Loop flag" + ASysCount.ToString();
}

protected void Button17_Click(object sender, EventArgs e)
{
    if (FPassword.ToLower() != "kenken") return;
    Timer1.Enabled = true;
    // Aautoctlflag = 1; // auto only
    Button17.Text = "系統自動啟動中";
    TextBox4.Text = "系統自動啟動";
    string tmpstr = MainLoop();    
}

public string Auto_CreDN()
{
        return("");
}

////////////////////////////////////////////////////////////
// Auto Generate UPD
// 1. Use Table UPD_PODN_List_T table
// 2. Index Invoice(DN), 
// 3. DN, PO, UPDflag, Sapflag, 
// 4. Auto_CreDN() -- Generate DN, PO 
// 5. Auto_CloseSap() -- Check and Write Sap
// 6. Auto_GenUPDEMEI() -- Check Sapclag="C" , Close , write
// Appendix :
// 1. Need check double or already generate UPD/EMEI
// 2. Sap.Cmcs_pack_line_all singe DN + Multi Carton
// 3. Sap.Sap_DN_Info singe DN + Multi Item
// 4. Sap.Cmcs_ship_date Singe Carton + Multi PSN,EMEI
// 5. DN Count = Sap.Sap_Invoice_Info
///////////////////////////////////////////////////////////
public void AutoMotProc()
{      
     
}


//  OraL10DBAMain, ref OraL10DBAStandBy, ref OraL6DBAMain, ref OraL6DBAStandBy, ref OraWebCTLDBA, ref SqlWebCTLDBA,
//  Add   PUBLIB.CUSTOMERMODEL New Model 
public void AutoGooProc()
{
    //string t1 = FPubLibPointer.PubWri_MessLog("ZZAuto", ASysCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "MotAuto", "", "", "", NetSqlDB4, "sql");         // 10 Code
    //TextBox4.Text = "系統自動 Execute Web : " + firstcnt.ToString() + " 次";
    string DBReadString = OraL10DBAStandBy; //  ConfigurationManager.AppSettings["L8StandByConnectionString"]; // bjl6testConnectionString
    string DBWriString = OraWebCTLDBA; // ConfigurationManager.AppSettings["L8TestandWebConnectionString"]; // bjl6testConnectionString   
    string OraDBWriString = OraL10DBAMain;

    // Write to Web Server Close tmp 
    // int int1 = AutoUploadPointer.GetDnWithInsert(DBReadString, DBWriString); // Get DN from data and stroeprocedure
    // TJLibZhuPointer.CheckSAPClose(DBWriString, DBWriString);  // 221, 221
    // string t1 = FPubLibPointer.PubWri_MessLog("IDMAuto", ASysCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "ZZCalSap", "", "", "", NetSqlDB4, "sql");         // 10 Code
    // TJSYPointer.check3s4s(DBReadString, DBWriString);
    // int int2 = AutoUploadPointer.GetCreateUpdFile(DBReadString, DBWriString);
    // Moto CreateDNListPointer.Create_DnList2("1", "oracle", DBReadString, DBWriString, DBWriString, "Auto"); // New Add 20120913 單筆出貨主檔
    ////////////////////////////////////////////
    // 真實數據庫 213
    string DBRealtime = OraL10DBAMain; //  ConfigurationManager.AppSettings["NormalDbConnectionString"]; // 真實數據庫 97
    DBWriString = OraL10DBAMain;
    int int1 = AutoUploadPointer.GetDnWithInsert(DBReadString, DBRealtime);
    TJLibZhuPointer.CheckSAPClose(DBRealtime, DBRealtime);
    TJSYPointer.check3s4s(DBReadString, DBRealtime);
    // int int2 = AutoUploadPointer.GetCreateUpdFile(DBReadString, DBWriString); // Create UPD File 
    
}
public void AutoTJL6Proc()
{
  
    string tmporaDba = "oracle";
    // string t1 = FPubLibPointer.PubWri_MessLog("IDMAuto", ASysCount.ToString(), Aautorunflag.ToString(), Aautoctlflag.ToString(), Arunstatus.ToString(), "L6Auto", "", "", "", NetSqlDB4, "sql");         // 10 Code
    // TextBox4.Text = "系統自動 Execute L6" + firstcnt.ToString();
    string DBSFCString = OraL6DBAMain; // ConfigurationManager.AppSettings["tjl8SMTConnectionString"];
    string DBReadString = OraL6DBAMain; // ConfigurationManager.AppSettings["tjl8SMTConnectionString"];
    string DBWriString = OraL6DBAMain; //  ConfigurationManager.AppSettings["tjl8SMTConnectionString"];
    int Reti1 = GetSapBOMINVDataPointer.ExecuteGetSap(DBReadString, DBWriString, "");  // space 為未產生工單, "1" 為 7 天 
    int Reti2 = TGETWO2Pointer.SAPREPARTGPUPdate( tmporaDba, DBReadString, DBWriString);

    return;
  
}

///////////////////////////////////////////
// Insert Into L8 from L6 
//
public void AutoTJL6ToL8PIDProc()
{
    string InDB = "MAINPIDTRACE";
    string InFile = "L6ToL82";
    string OutFile = "MAINPIDTRACE";
    string[,] arrayOutDB = new string[10+ 1, 10 + 1];
    string InDBIP = OraL6DBAMain; // L6 Server  ConfigurationManager.AppSettings[ReadParaTxt("WebReadParam.txt", "20003")]; 
    string cnt =  ReadParaTxt("WebReadParam.txt", "20101");
    int v1=0, v2=0, v3=20101;
    if ( cnt == "" ) return;
    string DBReadString = "", DBWriString1 = "", DBWriString2 = "";
    v1 = Convert.ToInt32(cnt);
    for ( v2=1; v2<=v1; v2++ )
    {
        v3 = 20101 + v2; 
        arrayOutDB[v2, 1] = v2.ToString();
        arrayOutDB[v2, 2] = InDBIP;
        arrayOutDB[v2, 3] = ConfigurationManager.AppSettings[ReadParaTxt("WebReadParam.txt", v3.ToString()) ];
        arrayOutDB[v2, 4] = ""; 
    }


    DBReadString = OraL6DBAMain;  // L6 Server // arrayOutDB[1, 3];  // ConfigurationManager.AppSettings["L8StandByConnectionString"];   // 211 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString
    DBWriString1 = OraWebCTLDBA;  // Web ConfigurationManager.AppSettings["L8TestandWebConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
    DBWriString2 = OraL10DBAMain; // L10 Server ConfigurationManager.AppSettings["NormalDbConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
    string Ret1 = DeLinkPidlib4Pointer.CopyL6PID("1", "oracle", DBReadString, DBWriString1, DBWriString2, ref arrayOutDB);
    //string Ret2 = DeLinkPidlibPointer.GetMAINPIDTRACEData( "1", "oracle", DBReadString, DBWriString);
 
}

public void AutoTJL6ToL8PIDProcCheck()
{

    string DBReadString = OraL10DBAStandBy; // ConfigurationManager.AppSettings["L8StandByConnectionString"];   // 211 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString
    string DBWriString1 = OraWebCTLDBA;  // ConfigurationManager.AppSettings["L8TestandWebConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
    string DBWriString2 = OraL10DBAMain; // ConfigurationManager.AppSettings["NormalDbConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
    string Ret1 = DeLinkPidlib4Pointer.CopyL6PIDCheck("1", "oracle", DBWriString2, DBWriString2);
    //string Ret2 = DeLinkPidlibPointer.GetMAINPIDTRACEData( "1", "oracle", DBReadString, DBWriString);

}

public void AutoTJL6ToL8PIDProcCopyIMEI()
{

    string DBReadString = OraL10DBAStandBy; //  ConfigurationManager.AppSettings["L8StandByConnectionString"];   // 211 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString
    string DBWriString1 = OraWebCTLDBA; // ConfigurationManager.AppSettings["L8TestandWebConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
    string DBWriString2 = OraL10DBAMain; // ConfigurationManager.AppSettings["NormalDbConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
    string Ret1 = DeLinkPidlib4Pointer.CopyL6PIDIMEI("1", "oracle", DBWriString2, DBWriString2);
    //string Ret2 = DeLinkPidlibPointer.GetMAINPIDTRACEData( "1", "oracle", DBReadString, DBWriString);

}


public void AutoChieMeiProc()
{
  //  string DBReadString = OraL10DBAStandBy; //  ConfigurationManager.AppSettings["L8StandByConnectionString"];   // 211 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString
  //  string DBWriString1 = OraWebCTLDBA; //  ConfigurationManager.AppSettings["L8TestandWebConnectionString"]; // 221 ConfigurationManager.AppSettings["L10IntelConnectingString"]; // bjl6testConnectionString   
  // string Ret1 = ChiMeilibPointer.CMDelPOData("1", "oracle", DBReadString, DBWriString1, "-10");
  //  string Ret2 = ChiMeilibPointer.CMDelUpdate("1", "oracle", DBReadString, DBWriString1, "-10");


}


///////////////////////////////////////////////////////
// 0 - 5 為代號, 第 6 位開始為 Para   // 代表無效
// 10001 : Raed DB6 String
// 10002 : Write Moto  L10
// 10003 : Wrute Intel L10
private string ReadParaTxt(string FilePara, string ParaNum)
{
    string retPara = "";
    int ArrMax = 200;
    string[] ReadTxtArray = new string[ArrMax];
    string FileName = "SetReadParam.txt";
    if (FilePara != "") FileName = FilePara;
    string ServerPath = Server.MapPath("~\\" + FileName);
    FileInfo fi = new FileInfo(ServerPath);
    StreamReader sr = fi.OpenText();
    string InString = "";
    int i = 0, strlen = 0;

    while (((InString = sr.ReadLine()) != null) && (i < ArrMax))
    {
        ReadTxtArray[i] = InString;
        //             Response.Write(ReadTxtArray[i]);
        //             Response.Write("<br>");
        if ((InString != "") && (InString != " ") && (InString.Substring(0, 2) != "//"))
        {
            strlen = InString.Length - 1;
            if ((InString.Substring(0, 5) == ParaNum) && (strlen >= 6))
            {
                retPara = InString.Substring(6, strlen - 5);
                i = ArrMax;  // Break
            }

        }
        i++;

    }

    sr.Close();
    return (retPara);
}

public void GetTextFile(ref string[] ReadTxtArray, int ArrMax, string dtype)
{
    string retPara = "";
    //  int ArrMax = 200;
    //  string[] ReadTxtArray = new string[ArrMax];
    //  string[] ProtTxtArray = new string[ArrMax];
    //  string[] CProtTxtArray = new string[ArrMax];

    //  string DBString = "", ProDBSTring = "", PCode = "", ConString = "", PStrSpilt = "",

    string InString = "", PCode = "", PStrSpilt = ",";
    string t1 = "";
    int v1 = 0;
    string FileName = "WebReadParam.txt";
    string FilePara = "", ParaNum = "License Document By IT Team 20120131 Donot Copy and Delete this file";
    if (FilePara != "") FileName = FilePara;
    string ServerPath = Server.MapPath("~\\" + FileName);
    FileInfo fi = new FileInfo(ServerPath);
    StreamReader sr = fi.OpenText();
    string EnCodeStr = "", DnCodeStr = "";
    int i = 0, strlen = 0, Chead = 5;
    PCode = ReadParaTxt("WebReadParam.txt", "23101"); // "License Document By IT Team 20120131 Donot Copy and Delete this file";


    while (((InString = sr.ReadLine()) != null) && (i < ArrMax))
    {
        //if ((InString != "") && (InString != " ") && (InString.Substring(0, 2) != "//"))
        //    ReadTxtArray[i] = InString;

        if ((InString != "") && (InString != " ") && (InString.Substring(0, 2) != "//"))
        {
            strlen = InString.Length - 1;
            t1 = InString.Substring(0, 5); // Pre 5 code 
            v1 = Convert.ToInt32(t1);
            if ((v1 >= 23201) && (v1 <= 23999) && (dtype == "2"))
            {
                retPara = InString.Substring(6, strlen - 5);
                EnCodeStr = InString.Substring(Chead + 1, strlen - Chead);
                // DnCodeStr = ConvertlibPointer.DeEncCode(EnCodeStr, PCode, PStrSpilt, "");
                DnCodeStr = LibUSR1Pointer.DBDeEncCode(EnCodeStr, PCode, ",", "2DBA");
                ReadTxtArray[i] = InString.Substring(0, 6) + DnCodeStr;

                //  i = ArrMax;  // Break
            }
            else
                ReadTxtArray[i] = InString;

        }
        i++;

    }

    sr.Close();



}  // end GetTextFile

}  // end public partial class Main ////// End all SubRoutine ////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// r1 = ReadParaTxt("WebReadParam.txt", "10001");  WebReadParam.txt is Param Text
// Document : Session 傳參數string Session["Param1"] = 1; tSUsername = Session["Param1"].ToString(); 
// Session["Param1"] = 1;  代表第 1 類表傳  Session["Param2"] 為讀資料庫位置
// Document : Session 傳參數string Session["Param1"] = 1; tSUsername = Session["Param1"].ToString(); 
//  Session["Param1"] = 1;         // Data Process I/O
//  Session["Param2"] = "oracle";  // 數據庫
//  Session["Param3"] = str1;      // DBReadString
//  Session["Param4"] = str2;      // DBWriString
//  Session["Param5"] = "auto";    // 自動或手動執行
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Transfer L6 To L8 temp file in L8=6 in PUBLIB
// 1. Write 3 sequence table when PSN generated
//    1.1 L6ToL8T1 (  for Gen L8 table in L6  )
//    1.2 L6ToL8T2 (  for L8 table in L6 write to L8 table in L8
//    1.3 L6ToL8T3 (  record only )  Just Write Only
//    1.4 Write 3 table by PSN, DocumentID, F1_FLAG by sequence  
//    1.5 Generate L8 table program read and get L6ToL8T1 PSN then write 6 L8 tablle in L6 and kill  L6ToL8T1 by PSN
//        Program never leave and running each 10 sec. It will better if can count time when running frequence. 
//    1.6 Move     L8 table program read and get L6ToL8T2 PSN then write 6 L8 tablle in L8 and kill  L6ToL8T2 by PSN
//        Progran running each 30 minute   
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        