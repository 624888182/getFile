using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Threading;
using System.IO;
using System.Management;
using System.Configuration;
using EconomyUser;
using SCM.GSCMDKen;

public partial class TransferL6ToL8Auto : System.Web.UI.Page
{
    public static string DBType = "oracle";
    public static string DBFlag = "";
    public static string L6Connection = "SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.186.171.186)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=smtsfc)));uid=sfis1;pwd=sfis1";
    //public static string L8Connection = "SERVER=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.186.19.20)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=tjsfc)));uid=sfis1;pwd=sfis1";
    public static string[,] L8Connection;
    public static int[] LastRunCount = new int[5];
    public static string NetSqlDB4 = ConfigurationManager.AppSettings["SqlZZWebString"];
    public static bool bRun;
    public static DateTime RunStart;
    public static int iStatusQty;
    static string OraL10DBAMain = "";      // 76  Oracle Unix
    static string OraL10DBAStandBy = "";    // 211 Oracle Unix
    static string OraL6DBAMain = "";        // 214 Oracle Unix 
    static string OraL6DBAStandBy = "";     // 
    static string OraWebCTLDBA = "";        // 221 Oracle Window
    static string SqlWebCTLDBA = "";        // 221 Sql Windoq 
    string SiteName = "ZZSFC";
    static int ArrMax = 200;
    static string[] ReadTxtArray = new string[ArrMax];
    
    FPubLib FPubLibPointer = new FPubLib();
    ClassLibrarySCM1.Class1 LibSCM1Pointer = new ClassLibrarySCM1.Class1();
    ClassLibraryUSR1.Class1 LibUSR1Pointer = new ClassLibraryUSR1.Class1();
    Convertlib ConvertlibPointer = new Convertlib();
    UsrCtllib UsrCtllibPointer = new UsrCtllib();
    //  Monitor.SMTDataTransfer.SMTL6DataToL8Auto(DBFlag, L6Connection, L8Connection, MO, 100);

    private int StrToIntDef(string str, int Default)
    {
        int iRet;
        try
        {
            iRet = Convert.ToInt32(str);
        }
        catch
        {
            iRet = Default;
        }
        return iRet;
    }


    protected void Page_Load(object sender, EventArgs e)
    {
        //Timer2.Enabled = false; // Stop Interrupt
        if (!Page.IsPostBack)
        {
            // 
            //Session["Param1"] = 1;
            //Session["Param2"] = "oracle";
            //Session["Param3"] = L6Connection;
            //Session["Param4"] = L8Connection;
            //Session["Param5"] = "auto";
            SiteName = ReadParaTxt("WebReadParam.txt", "10000");
            string t1 = "", t2 = "", t3 = "", t4 = "", t5 = "", t6 = "", t7 = "", t8 = "", t9 = "", Loc1 = "";
            GetTextFile(ref ReadTxtArray, ArrMax, "2");
            Loc1 = UsrCtllibPointer.GetTextBySite(ref ReadTxtArray, ArrMax, SiteName, "1", ref OraL10DBAMain, ref OraL10DBAStandBy, ref OraL6DBAMain, ref OraL6DBAStandBy, ref OraWebCTLDBA, ref SqlWebCTLDBA, ref t1, ref t2, ref t3, ref t4, ref t5, ref t6, ref t7, ref t8);  // "1" 不傳換
            if ( OraL6DBAMain != "" ) L6Connection = OraL6DBAMain; // L6 Server
            if ( SqlWebCTLDBA != "") NetSqlDB4 = SqlWebCTLDBA; //Web Server
            
            try
            {
                string r7 = ReadParaTxt("WebReadParam.txt", "20200");
                if (r7.ToLower() == "auto")
                {
                    Timer2.Enabled = true;
                    txt_Head.Text = "TransferL6 Data To L8 auto run";
                    Button1.Enabled = false;      
                    // Test      
                    RunStart = DateTime.Now;
                    MainLoop();
                }
            }
            catch
            {
                txt_Head.Text = "TransferL6 Data To L8 Not auto run";
            }


            /*
            try
            {
                int s1 = (int)Session["Param1"];         // Data Process I/O
                string s2 = (string)Session["Param2"];         // = "oracle";  // 數據庫
                string s3 = (string)Session["Param3"];         // = str1;      // DBReadString
                string s4 = (string)Session["Param4"];          //= str2;      // DBWriString
                string s5 = (string)Session["Param5"];          //  = "auto";    // 自動或手動執行
                if (s1 == 1)
                {
                    if (s5.ToLower() == "auto")
                    {
                        DBType = s2;
                        L6Connection = s3;
                        L8Connection = s4;
                        MainLoop();
                    }
                }
                else
                {
                    txt_Head.Text = "TransferL6 Data To L8 Not auto run";
                }
            }
            catch
            { txt_Head.Text = "TransferL6 Data To L8 Not auto run"; }
             */
        }

        
    }

    private void MainLoop()
    {
        Timer2.Enabled = false; // Stop Interrupt
        if (iStatusQty == null) iStatusQty = 0;
        string IP = Request.UserHostAddress;
        int iParam = 20000, Ret1 = 0;
        string L6Name = "";
        txt_STATUS.Text = "Run Application " + "\r\n";

        if (SiteName == "ZZSFC") Ret1 = ReadParamByText(iParam, ref L6Name, ref L6Connection, ref L8Connection, ref DBFlag);
        else Ret1 = ReadParam(iParam, ref L6Name, ref L6Connection, ref L8Connection, ref DBFlag);

        if ( Ret1 == 0 )  // Find Data
        {
                 string MO;
                if ((iStatusQty % 40) == 0) MO = "Y"; else MO = "N";
                FPubLibPointer.PubWri_MessLog("L6TOL8", iStatusQty.ToString(), "1", "0", "L6ToL8LoopS", IP, L6Connection.Substring(1, 100), L6Name, "", NetSqlDB4, "sql");
                int iCount = 0;

                while (iCount < 500)
                {
                    int iTmp = SMTDataTransfer.SMTL6DataToL8Auto(DBFlag, L6Connection, L8Connection, MO, 100);
                    txt_STATUS.Text += "Run " + L6Name + " Count: " + iTmp + "\r\n";
                    if (iTmp == 0) break;
                    iCount += iTmp;
                }

                FPubLibPointer.PubWri_MessLog("L6TOL8", iStatusQty.ToString(), "2", iCount.ToString(), "L6ToL8LoopE", IP, L6Connection.Substring(1, 100), L6Name, "", NetSqlDB4, "sql");

                txt_STATUS.Text += "Application Exit. Next Run will " + DateTime.Now.AddMilliseconds(Timer2.Interval).ToString("HH:mm:ss");
                iStatusQty++;

                iParam += 1000;            
        } 

        Timer2.Enabled = true;
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        //string r1 = ReadParaTxt("WebReadParam.txt", "20003");
        //string r2 = ReadParaTxt("WebReadParam.txt", "20002");
        //L6Connection = ConfigurationManager.AppSettings[r1];
        //L8Connection = ConfigurationManager.AppSettings[r2];
        MainLoop();
    }


    /* WriteDB 
     * 0: DBString
     * 1: L8Type : Default Blank, GLM
     * 2: L6Line: When L8Type is GLM, used.
     */
    private int ReadParam(int Input, ref string L6Name,ref string ReadDB, ref string[,] WriteDB, ref string DataFlag)
    {
        int iRet = 0;
        try
        {
            string r1 = ReadParaTxt("WebReadParam.txt", (Input + 3).ToString());
            L6Name = r1;
            ReadDB = ConfigurationManager.AppSettings[r1];
            string r2 = ReadParaTxt("WebReadParam.txt", (Input + 101).ToString());
            int iR2 = StrToIntDef(r2, 1);
            WriteDB = new string[iR2,3];
            for (int i = 1; i <= iR2; i++)
            {
                int r4 = Input + 101;
                string r5 = (r4 + i).ToString();
                string r6 = ReadParaTxt("WebReadParam.txt", r5);
                WriteDB[i - 1,0] = ConfigurationManager.AppSettings[r6];
                int iL8Type = r4+ i + 100;
                int iL6Line = r4 + i + 110;
                string rL8Type = ReadParaTxt("WebReadParam.txt", iL8Type.ToString());
                string rL6Line = ReadParaTxt("WebReadParam.txt", iL6Line.ToString());
                WriteDB[i - 1, 1] = rL8Type;
                WriteDB[i - 1, 2] = rL6Line;
            }

            string r8 = ReadParaTxt("WebReadParam.txt", (Input + 300).ToString());
            if ((r8 != null) && (r8 != "")) DataFlag = r8; else DataFlag = "LF";
            if ((ReadDB == null) || (ReadDB.Trim() == "")) iRet = 1;
        }
        catch
        {
            iRet = -1;
        }
        return iRet;
    }

    public int ReadParamByText(int Input, ref string L6Name, ref string ReadDB, ref string[,] WriteDB, ref string DataFlag)
    {
        int iRet = 0, WriDBNum = 0;
        string DBWRI = "", DB6 = "", DB10 = "";
        if (SiteName == "ZZSFC")
        {
            DBWRI = "21401";
            DB6 = "23310";
            DB10 = "23311";
            Input = 23310;
        }

        try
        {
            string r1 = UsrCtllibPointer.GetTextByCode(ref ReadTxtArray, ArrMax, DB6, "1");  // "1" 不傳換; //ReadParaTxt("WebReadParam.txt", (Input + 3).ToString());
            L6Name = r1;
            ReadDB = r1; //  ConfigurationManager.AppSettings[r1];  // L6
            string r2 = UsrCtllibPointer.GetTextByCode(ref ReadTxtArray, ArrMax, DBWRI, "1");  // 回寫DB 數量 ReadParaTxt("WebReadParam.txt", (Input + 101).ToString());
            int iR2 = StrToIntDef(r2, 1);
            WriteDB = new string[iR2, 3];
            for (int i = 1; i <= iR2; i++)
            {
                int r4 = Input ;
                string r5 = (r4 + i).ToString();
                string r6 = UsrCtllibPointer.GetTextByCode(ref ReadTxtArray, ArrMax, r5, "1"); // ReadParaTxt("WebReadParam.txt", r5);
                WriteDB[i - 1, 0] = r6; // 數據庫名 ConfigurationManager.AppSettings[r6];
                int iL8Type = r4 + i + 100;
                int iL6Line = r4 + i + 110;
                string rL8Type = UsrCtllibPointer.GetTextByCode(ref ReadTxtArray, ArrMax, iL8Type.ToString(), "1"); //ReadParaTxt("WebReadParam.txt", iL8Type.ToString());
                string rL6Line = UsrCtllibPointer.GetTextByCode(ref ReadTxtArray, ArrMax, iL6Line.ToString(), "1"); //ReadParaTxt("WebReadParam.txt", iL6Line.ToString());
                WriteDB[i - 1, 1] = rL8Type;
                WriteDB[i - 1, 2] = rL6Line;
            }

            string r8 = ReadParaTxt("WebReadParam.txt", (Input + 300).ToString());
            if ((r8 != null) && (r8 != "")) DataFlag = r8; else DataFlag = "LF";
            if ((ReadDB == null) || (ReadDB.Trim() == "")) iRet = 1;
        }
        catch
        {
            iRet = -1;
        }
        return iRet;
    }

    private string ReadParaTxt(string FilePara, string ParaNum)
    {
        string retPara = "";
        int ArrMax = 100;
        string[] ReadTxtArray = new string[ArrMax];
        string FileName = "SetReadParam.txt";
        if (FilePara != "") FileName = FilePara;
        string ServerPath = Server.MapPath("~\\" + FileName);
        FileInfo fi = new FileInfo(ServerPath);
        StreamReader sr = fi.OpenText();
        string InString = "";
        int i = 0, strlen = 0;

        while (((InString = sr.ReadLine()) != null) && (i < ArrMax))
        {
            ReadTxtArray[i] = InString;
            //             Response.Write(ReadTxtArray[i]);
            //             Response.Write("<br>");
            if ((InString != "") && (InString != " ") && (InString.Substring(0, 2) != "//"))
            {
                strlen = InString.Length - 1;
                if ((InString.Substring(0, 5) == ParaNum) && (strlen >= 6))
                {
                    retPara = InString.Substring(6, strlen - 5);
                    i = ArrMax;  // Break
                }

            }
            i++;

        }

        sr.Close();
        return (retPara);
    }

    protected void Timer2_Tick(object sender, EventArgs e)
    {
        if (bRun == null) bRun = false;

        if ((bRun == false) || (RunStart.AddHours(1) < DateTime.Now))
        {
            bRun = true;
            RunStart = DateTime.Now;
            MainLoop();
            bRun = false;
        }
    }



    public void GetTextFile(ref string[] ReadTxtArray, int ArrMax, string dtype)
    {
        string retPara = "";
        //  int ArrMax = 200;
        //  string[] ReadTxtArray = new string[ArrMax];
        //  string[] ProtTxtArray = new string[ArrMax];
        //  string[] CProtTxtArray = new string[ArrMax];

        //  string DBString = "", ProDBSTring = "", PCode = "", ConString = "", PStrSpilt = "",

        string InString = "", PCode = "", PStrSpilt = ",";
        string t1 = "";
        int v1 = 0;
        string FileName = "WebReadParam.txt";
        string FilePara = "", ParaNum = "License Document By IT Team 20120131 Donot Copy and Delete this file";
        if (FilePara != "") FileName = FilePara;
        string ServerPath = Server.MapPath("~\\" + FileName);
        FileInfo fi = new FileInfo(ServerPath);
        StreamReader sr = fi.OpenText();
        string EnCodeStr = "", DnCodeStr = "";
        int i = 0, strlen = 0, Chead = 5;
        PCode = ReadParaTxt("WebReadParam.txt", "23101"); // "License Document By IT Team 20120131 Donot Copy and Delete this file";


        while (((InString = sr.ReadLine()) != null) && (i < ArrMax))
        {
            //if ((InString != "") && (InString != " ") && (InString.Substring(0, 2) != "//"))
            //    ReadTxtArray[i] = InString;

            if ((InString != "") && (InString != " ") && (InString.Substring(0, 2) != "//"))
            {
                strlen = InString.Length - 1;
                t1 = InString.Substring(0, 5); // Pre 5 code 
                v1 = Convert.ToInt32(t1);
                if ((v1 >= 23201) && (v1 <= 23999) && (dtype == "2"))
                {
                    retPara = InString.Substring(6, strlen - 5);
                    EnCodeStr = InString.Substring(Chead + 1, strlen - Chead);
                    // DnCodeStr = ConvertlibPointer.DeEncCode(EnCodeStr, PCode, PStrSpilt, "");
                    DnCodeStr = LibUSR1Pointer.DBDeEncCode(EnCodeStr, PCode, ",", "2DBA");
                    ReadTxtArray[i] = InString.Substring(0, 6) + DnCodeStr;

                    //  i = ArrMax;  // Break
                }
                else
                    ReadTxtArray[i] = InString;

            }
            i++;

        }

        sr.Close();
        

    }  // end GetTextFile

    public void ReaddDRAFromText(string SiteName)
    {
        //static string OraL10DBAMain  = "";
        // static string OraL10DBAStandBy = "";
        //static string OraL6DBAMain = "";
        //static string OraL6DBAStandBy = "";
        //static string OraWebCTLDBA = "";
        //static string SqlWebCTLDBA = "";

        string t1 = "", t2 = "", t3 = "", t4 = "", t5 = "", t6 = "", t7 = "";


        if (SiteName == "TJSFC")
        {
            t1 = ReadParaTxt("WebReadParam.txt", "23101");  // procode
            t2 = ReadParaTxt("WebReadParam.txt", "23201");
            t3 = ReadParaTxt("WebReadParam.txt", "23202");
            t4 = ReadParaTxt("WebReadParam.txt", "23203");
            t5 = ReadParaTxt("WebReadParam.txt", "23204");
            t6 = ReadParaTxt("WebReadParam.txt", "23205");
            t7 = ReadParaTxt("WebReadParam.txt", "23206");

            if (t1 == "") return;

            if (t2 != "") OraL10DBAMain = ConvertlibPointer.DeEncCodeWithoutEclcode(t2, t1, ",", "2DBA");
            if (t3 != "") OraL10DBAStandBy = ConvertlibPointer.DeEncCodeWithoutEclcode(t3, t1, ",", "2DBA");
            if (t4 != "") OraL6DBAMain = ConvertlibPointer.DeEncCodeWithoutEclcode(t4, t1, ",", "2DBA");
            if (t5 != "") OraL6DBAStandBy = ConvertlibPointer.DeEncCodeWithoutEclcode(t5, t1, ",", "2DBA");
            if (t6 != "") OraWebCTLDBA = ConvertlibPointer.DeEncCodeWithoutEclcode(t6, t1, ",", "2DBA");
            if (t7 != "") SqlWebCTLDBA = ConvertlibPointer.DeEncCodeWithoutEclcode(t7, t1, ",", "2DBA");

        }
    }

} // end prg
