<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WOFrom" xml:space="preserve">
    <value>WO From</value>
  </data>
  <data name="WOTo" xml:space="preserve">
    <value>WO To</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="LineF" xml:space="preserve">
    <value>Line From</value>
  </data>
  <data name="LineE" xml:space="preserve">
    <value>Line End</value>
  </data>
  <data name="Query" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="Line" xml:space="preserve">
    <value>Work Order</value>
  </data>
  <data name="WONull" xml:space="preserve">
    <value>Please Input Work Order</value>
  </data>
  <data name="ModelNull" xml:space="preserve">
    <value>Please Input Model</value>
  </data>
  <data name="MainID" xml:space="preserve">
    <value>Main ID</value>
  </data>
  <data name="SecondaryID" xml:space="preserve">
    <value>Secondary ID</value>
  </data>
  <data name="CDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="StationID" xml:space="preserve">
    <value>Station ID</value>
  </data>
  <data name="StateID" xml:space="preserve">
    <value>State ID</value>
  </data>
  <data name="EmpID" xml:space="preserve">
    <value>Employee ID</value>
  </data>
  <data name="InvalidDigit" xml:space="preserve">
    <value>Line is invalid!</value>
  </data>
  <data name="SDateFrom" xml:space="preserve">
    <value>Scan Date From</value>
  </data>
  <data name="SDateTo" xml:space="preserve">
    <value>Scan Datae To</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="WO" xml:space="preserve">
    <value>Work Order</value>
  </data>
  <data name="QueryCondition" xml:space="preserve">
    <value>Please input a query condition at least！</value>
  </data>
  <data name="WOQty" xml:space="preserve">
    <value>WO Qty</value>
  </data>
  <data name="WoInfo" xml:space="preserve">
    <value>Work Order Information</value>
  </data>
  <data name="ProductInfo" xml:space="preserve">
    <value>Process Information</value>
  </data>
  <data name="IMEIRelationShip" xml:space="preserve">
    <value>Product ID、IMEI,Picasso&amp;PPID  RelationShip</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="WONotExist" xml:space="preserve">
    <value>Work Order Not Exist!</value>
  </data>
  <data name="DateFrom" xml:space="preserve">
    <value>Date From</value>
  </data>
  <data name="DateTo" xml:space="preserve">
    <value>Date To</value>
  </data>
  <data name="ErrorDateTime" xml:space="preserve">
    <value>Please input the correct datetime (ex. 2007/01/29 17:32)!</value>
  </data>
  <data name="ErrorInt" xml:space="preserve">
    <value>Please input the correct Integer!</value>
  </data>
  <data name="TopN" xml:space="preserve">
    <value>Top N</value>
  </data>
  <data name="DefectCode" xml:space="preserve">
    <value>Defect Code</value>
  </data>
  <data name="DefectDesc" xml:space="preserve">
    <value>Defect Desc</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="InspectionQty" xml:space="preserve">
    <value>Inspection Qty</value>
  </data>
  <data name="DefectRate" xml:space="preserve">
    <value>Defect Rate</value>
  </data>
  <data name="PanelID" xml:space="preserve">
    <value>Panel ID</value>
  </data>
  <data name="WODate" xml:space="preserve">
    <value>Order Date</value>
  </data>
  <data name="BOMVer" xml:space="preserve">
    <value>BOM Version</value>
  </data>
  <data name="SerialQty" xml:space="preserve">
    <value>Serial Qty</value>
  </data>
  <data name="PrintDate" xml:space="preserve">
    <value>Print Date</value>
  </data>
  <data name="ProductID" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="BaseInfo" xml:space="preserve">
    <value>Base Information</value>
  </data>
  <data name="ErrorMsg" xml:space="preserve">
    <value>Error Msg</value>
  </data>
  <data name="RepairInfo" xml:space="preserve">
    <value>Repair Information</value>
  </data>
  <data name="MaterialNO" xml:space="preserve">
    <value>Material NO</value>
  </data>
  <data name="Factory" xml:space="preserve">
    <value>Factory</value>
  </data>
  <data name="ComputerName" xml:space="preserve">
    <value>ComputerName</value>
  </data>
  <data name="E2PDate" xml:space="preserve">
    <value>E2P Date</value>
  </data>
  <data name="PCName" xml:space="preserve">
    <value>PC Name</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>General Report</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="StatisticsType" xml:space="preserve">
    <value>Statistics Type</value>
  </data>
  <data name="TestStation" xml:space="preserve">
    <value>Test Station</value>
  </data>
  <data name="PassQty" xml:space="preserve">
    <value>Pass Qty</value>
  </data>
  <data name="FailQty" xml:space="preserve">
    <value>Fail Qty</value>
  </data>
  <data name="TotalQty" xml:space="preserve">
    <value>Total Qty</value>
  </data>
  <data name="MachineYield" xml:space="preserve">
    <value>Machines Yield(%)</value>
  </data>
  <data name="LinesYield" xml:space="preserve">
    <value>Lines Yield(%)</value>
  </data>
  <data name="MachineYield1" xml:space="preserve">
    <value>Machines Yield</value>
  </data>
  <data name="SMTLineYield" xml:space="preserve">
    <value>SMT Line Yield</value>
  </data>
  <data name="ASSYLineYield" xml:space="preserve">
    <value>Assembly Line Yield</value>
  </data>
  <data name="TestContent" xml:space="preserve">
    <value>Test Content</value>
  </data>
  <data name="TestPC" xml:space="preserve">
    <value>Test Computer</value>
  </data>
  <data name="EmpTip" xml:space="preserve">
    <value>Please input a employee id</value>
  </data>
  <data name="OutPut" xml:space="preserve">
    <value>To Excel</value>
  </data>
  <data name="ForSelect" xml:space="preserve">
    <value>Options Select</value>
  </data>
  <data name="ErrorStation" xml:space="preserve">
    <value>Please choose the test station</value>
  </data>
  <data name="ErrorContent" xml:space="preserve">
    <value>Please choose the test content</value>
  </data>
  <data name="ErrorTime" xml:space="preserve">
    <value>The start time must before the end time</value>
  </data>
  <data name="ErrorTimenull" xml:space="preserve">
    <value>Please input the start time and end time</value>
  </data>
  <data name="ErrorEmp" xml:space="preserve">
    <value>Employee ID not Exsit</value>
  </data>
  <data name="ErrorModel" xml:space="preserve">
    <value>Please choose the Model</value>
  </data>
  <data name="CountName" xml:space="preserve">
    <value>CountName</value>
  </data>
  <data name="ErrorQuery" xml:space="preserve">
    <value>Please Input a Key Word Any More For Inquiry!</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>No Data Found!</value>
  </data>
  <data name="NoTable" xml:space="preserve">
    <value>No Data Table For Output!</value>
  </data>
  <data name="DownLoad" xml:space="preserve">
    <value>DownLoad</value>
  </data>
  <data name="InvoiceNO" xml:space="preserve">
    <value>Invoice NO</value>
  </data>
  <data name="NoInput" xml:space="preserve">
    <value>Please input invoice NO or P order!</value>
  </data>
  <data name="ColumnDesc" xml:space="preserve">
    <value>Column Desc</value>
  </data>
  <data name="ColumnName" xml:space="preserve">
    <value>Column Name</value>
  </data>
  <data name="FunctionType" xml:space="preserve">
    <value>Function Type</value>
  </data>
  <data name="FunctionValue" xml:space="preserve">
    <value>Function Value</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="FailureItem" xml:space="preserve">
    <value>Failure Item</value>
  </data>
  <data name="FixtureID" xml:space="preserve">
    <value>FixtureID</value>
  </data>
  <data name="LineID" xml:space="preserve">
    <value>LineID</value>
  </data>
  <data name="FunctionName" xml:space="preserve">
    <value>Function Name</value>
  </data>
  <data name="FunctionDesc" xml:space="preserve">
    <value>Function Description</value>
  </data>
  <data name="CartonID" xml:space="preserve">
    <value>Carton No</value>
  </data>
  <data name="GustPN" xml:space="preserve">
    <value>SJUG</value>
  </data>
  <data name="ScanDate" xml:space="preserve">
    <value>ScanDate</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TransferOuteDate" xml:space="preserve">
    <value>Transfer Oute Date</value>
  </data>
  <data name="Dept" xml:space="preserve">
    <value>Dept</value>
  </data>
  <data name="EffectiveFrom" xml:space="preserve">
    <value>Effective From</value>
  </data>
  <data name="EffectiveTo" xml:space="preserve">
    <value>EffectiveTo</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="LoginName" xml:space="preserve">
    <value>Login Name</value>
  </data>
  <data name="LineRate" xml:space="preserve">
    <value>Line Rate</value>
  </data>
  <data name="LineFirstRate" xml:space="preserve">
    <value>Line First Rate</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="SAPHONHAIPN" xml:space="preserve">
    <value>SAP COMPONEMT</value>
  </data>
  <data name="SAPLOCATION" xml:space="preserve">
    <value>SAP LOCATION</value>
  </data>
  <data name="ComPare" xml:space="preserve">
    <value>ComPare</value>
  </data>
  <data name="SMTHONHAIPN" xml:space="preserve">
    <value>SMT COMPONEMT</value>
  </data>
  <data name="SMTLOCATION" xml:space="preserve">
    <value>SMT LOCATION</value>
  </data>
  <data name="TabID" xml:space="preserve">
    <value>Tab ID</value>
  </data>
  <data name="TabsDefinitions" xml:space="preserve">
    <value>Tabs Definitions</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Privileges" xml:space="preserve">
    <value>Privileges</value>
  </data>
  <data name="MenuID" xml:space="preserve">
    <value>Menu ID</value>
  </data>
  <data name="UserID" xml:space="preserve">
    <value>User ID</value>
  </data>
  <data name="UserNotExists" xml:space="preserve">
    <value>User Not Exists!</value>
  </data>
  <data name="Function" xml:space="preserve">
    <value>Function</value>
  </data>
  <data name="DataExists" xml:space="preserve">
    <value>Data Exists!</value>
  </data>
  <data name="Import_date" xml:space="preserve">
    <value>Import Date</value>
  </data>
  <data name="FParentID" xml:space="preserve">
    <value>Parent ID</value>
  </data>
  <data name="FTabOrder" xml:space="preserve">
    <value>Tab Order</value>
  </data>
  <data name="ErrorProductID" xml:space="preserve">
    <value>Please Input Product ID</value>
  </data>
  <data name="NoOut" xml:space="preserve">
    <value>Disk not Out !</value>
  </data>
  <data name="NoRecord" xml:space="preserve">
    <value>Sorry, No Data Found!</value>
  </data>
  <data name="InputError" xml:space="preserve">
    <value>Please  input voild Sorder!</value>
  </data>
  <data name="CartonNo" xml:space="preserve">
    <value>Carton NO</value>
  </data>
  <data name="QueryByModel" xml:space="preserve">
    <value>Query By Model</value>
  </data>
  <data name="QueryByPID" xml:space="preserve">
    <value>Query By Product ID</value>
  </data>
  <data name="InputError1" xml:space="preserve">
    <value>Please Input the PID at AssyInput Station!</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>Average</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Lo_Limit" xml:space="preserve">
    <value>Lo_Limit</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="Tetval_CP" xml:space="preserve">
    <value>Tetval_CP</value>
  </data>
  <data name="Tetval_CPK" xml:space="preserve">
    <value>Tetval_CPK</value>
  </data>
  <data name="Tetval_Sample" xml:space="preserve">
    <value>Tetval_Sample</value>
  </data>
  <data name="Up_Limit" xml:space="preserve">
    <value>Up_Limit</value>
  </data>
  <data name="ExportExcel" xml:space="preserve">
    <value>Export To Excel</value>
  </data>
  <data name="SelectModel" xml:space="preserve">
    <value>Please Select Model!</value>
  </data>
  <data name="WONotMatchPart" xml:space="preserve">
    <value>WO not Match Part!</value>
  </data>
  <data name="ModelNotMatchPart" xml:space="preserve">
    <value>Model not Match Part!</value>
  </data>
  <data name="PlsChooseCondition" xml:space="preserve">
    <value>Please Choose a  Condition!</value>
  </data>
  <data name="PlsSelectModel" xml:space="preserve">
    <value>Please Select Correct Model!</value>
  </data>
  <data name="LVID" xml:space="preserve">
    <value>Please Input ID:</value>
  </data>
  <data name="LHParth" xml:space="preserve">
    <value>Please Choose the Parth:</value>
  </data>
  <data name="LHPorder" xml:space="preserve">
    <value>Please Input WorkOrder:</value>
  </data>
  <data name="Sorder" xml:space="preserve">
    <value>S Order</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="PID_qty" xml:space="preserve">
    <value>Order Qty</value>
  </data>
  <data name="Prd_type" xml:space="preserve">
    <value>PID Type</value>
  </data>
  <data name="Sequence_id" xml:space="preserve">
    <value>Sequence Qty</value>
  </data>
  <data name="Spart" xml:space="preserve">
    <value>S Part</value>
  </data>
  <data name="ChangePorder" xml:space="preserve">
    <value>Change P Order</value>
  </data>
  <data name="IMEI" xml:space="preserve">
    <value>Porder</value>
  </data>
  <data name="Porder" xml:space="preserve">
    <value>P Order</value>
  </data>
  <data name="unlink" xml:space="preserve">
    <value>Unlink</value>
  </data>
  <data name="INTERNALCARTON" xml:space="preserve">
    <value>Carton No</value>
  </data>
  <data name="INVOICENUMBER" xml:space="preserve">
    <value>Invoice No</value>
  </data>
  <data name="ITEMNUMBER" xml:space="preserve">
    <value>Part No</value>
  </data>
  <data name="QUANTITY" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="SHIPDATE" xml:space="preserve">
    <value>Ship Date</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Label Type</value>
  </data>
  <data name="PartNo" xml:space="preserve">
    <value>Part No</value>
  </data>
  <data name="SMTLack" xml:space="preserve">
    <value>SMT Lack Part Alert</value>
  </data>
  <data name="DetailExcel" xml:space="preserve">
    <value>Detail To Excel</value>
  </data>
</root>